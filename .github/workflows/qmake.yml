name: QMake Build

on: 
  # push代码时触发workflow
  push:
    paths-ignore: # 下列文件的变更不触发部署，可以自行添加
        - '.github/workflows/clean_cache.yml'
        - '.github/workflows/delete_workflow.yml'
        - '.github/workflows/cmake.yml'
        - '.github/workflows/readme.yml'
        - '.github/workflows/toolchain.yml'     
        - 'doc/**'
        - 'packaging/**'
        - 'translation/**'
        - '.clang-*'
        - '.gitignore'
        - 'LICENSE'
        - 'README*'
        - 'vcpkg.json'
  pull_request:
    paths-ignore: # 下列文件的变更不触发部署，可以自行添加
        - '.github/workflows/clean_cache.yml'
        - '.github/workflows/delete_workflow.yml'
        - '.github/workflows/cmake.yml'
        - '.github/workflows/readme.yml'
        - '.github/workflows/toolchain.yml'     
        - 'doc/**'
        - 'packaging/**'
        - 'translation/**'
        - '.clang-*'
        - '.gitignore'
        - 'LICENSE'
        - 'README*'
        - 'vcpkg.json'

env:
  MACOSX_DEPLOYMENT_TARGET: 11.0

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2019
          - macos-latest
          - ubuntu-latest
        arch:
          - x86_64
        include:
          - os: macos-latest
            arch: arm64

    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 1
          
      - uses: ./.github/actions/install-dependencies
        with:
          os_name: ${{ matrix.os }}

      - name: mkdir build
        shell: bash
        run: |
          mkdir build

      - name: msvc-build
        if: startsWith(matrix.os, 'windows')
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          qmake ./../.
          nmake
        working-directory: build
      - name: ubuntu-build
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          qmake ./../.
          make -j $(nproc)
        working-directory: build
      - name: macos-build
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          qmake QMAKE_APPLE_DEVICE_ARCHS="${{ matrix.arch }}" ./../.
          make -j $(sysctl -n hw.ncpu)
        working-directory: build
