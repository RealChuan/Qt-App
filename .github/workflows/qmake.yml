name: QMake Build

on: 
  push:
    paths-ignore:
        - 'cmake/**' 
        - 'docs/**'
        - 'packaging/**'
        - 'translations/**'
        - '.clang-*'
        - '.gitignore'
        - 'CMake*'
        - 'LICENSE'
        - 'README*'
        - 'vcpkg.json'
  pull_request:
    paths-ignore:
        - 'cmake/**' 
        - 'docs/**'
        - 'packaging/**'
        - 'translations/**'
        - '.clang-*'
        - '.gitignore'
        - 'CMake*'
        - 'LICENSE'
        - 'README*'
        - 'vcpkg.json'

env:
  MACOSX_DEPLOYMENT_TARGET: 11.0

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
        arch:
          - x86_64
        include:
          - os: macos-latest
            arch: arm64

    steps:
      - uses: actions/checkout@v5
        with: 
          fetch-depth: 1
          
      - uses: ./.github/actions/install-dependencies

      - uses: RealChuan/install-jom@main

      - name: mkdir build
        shell: bash
        run: |
          mkdir build

      - name: msvc-build
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          ..\scripts\windows\setVsDev.ps1
          & qmake ./../.
          & jom
        working-directory: build
      - name: ubuntu-build
        if: runner.os == 'Linux'
        shell: bash
        run: |
          qmake ./../.
          make -j $(nproc)
        working-directory: build
      - name: macos-build
        if: runner.os == 'macOS'
        shell: bash
        run: |
          qmake QMAKE_APPLE_DEVICE_ARCHS="${{ matrix.arch }}" ./../.
          make -j $(sysctl -n hw.ncpu)
        working-directory: build

      - name: Show file list on linux
        if: runner.os == 'Linux'
        shell: bash
        run: |
          ls -al 
          ls -al ./resources
          ls -al ./resources/themes
        working-directory: bin-64/Release
      
      - name: Show file list on macos
        if: runner.os == 'macOS'
        shell: bash
        run: |
          ls -al ./Qt-App.app/Contents/Resources
          ls -al ./Qt-App.app/Contents/Resources/themes
        working-directory: bin-64/Release
